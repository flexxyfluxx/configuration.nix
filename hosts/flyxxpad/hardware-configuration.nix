# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:
{
    imports = [
        (modulesPath + "/installer/scan/not-detected.nix")
    ];

    # boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
    boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" ];
    boot.initrd.kernelModules = [ ];
    boot.kernelModules = [ "kvm-amd" ];
    boot.extraModulePackages = [ ];

    fileSystems = {
        "/" = {
            device = "/dev/disk/by-uuid/8aad8e2b-ede5-4600-829e-06c64f638b81";
            fsType = "btrfs";
            options = [ "compress=zstd" ];
        };
        "/boot" = {
            device = "/dev/disk/by-uuid/031C-6358";
            fsType = "vfat";
            options = [ "fmask=0022" "dmask=0022" ];
        };
        "/home" = {
            device = "/dev/disk/by-uuid/e6739416-f463-4389-9732-8509573340a2";
            fsType = "btrfs";
        };
        /*
        "/mnt/ssd2" = {
            device = "/dev/disk/by-uuid/20b0c6dc-a6a3-4d1c-bf31-4fdedec1e294";
            fsType = "ext4";
        };
        */
    };

    swapDevices = [
        { device = "/dev/disk/by-uuid/dd6a4ef1-f735-43e1-832c-107a94e18fc6"; }
    ];

    nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
    hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
/*
# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/8aad8e2b-ede5-4600-829e-06c64f638b81";
      fsType = "btrfs";
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/e6739416-f463-4389-9732-8509573340a2";
      fsType = "btrfs";
    };

  fileSystems."/efi" =
    { device = "/dev/disk/by-uuid/031C-6358";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/dd6a4ef1-f735-43e1-832c-107a94e18fc6"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wwp0s20f0u6.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
*/
